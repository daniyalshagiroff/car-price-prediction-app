import React, { useEffect, useState } from "react";
import MetricSection from "./MetricSection";

export default function Dashboard() {
  const [blocks, setBlocks] = useState([]);     // —Å—é–¥–∞ –ø—Ä–∏–¥—ë—Ç –æ—Ç–≤–µ—Ç API (–º–∞—Å—Å–∏–≤ –º–∞—Å—Å–∏–≤–æ–≤)
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  useEffect(() => {
    async function load() {
      try {
        const res = await fetch("/home"); // –±–ª–∞–≥–æ–¥–∞—Ä—è proxy —ç—Ç–æ —É–π–¥—ë—Ç –Ω–∞ FastAPI
        if (!res.ok) throw new Error(`HTTP ${res.status}`);
        const json = await res.json();
        setBlocks(json);
      } catch (e) {
        setError(e.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏");
      } finally {
        setLoading(false);
      }
    }
    load();
  }, []);

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</p>;
  if (error)   return <p style={{ color: "crimson" }}>–û—à–∏–±–∫–∞: {error}</p>;

  // –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Ç–≤–æ–∏—Ö –±–ª–æ–∫–æ–≤ (–ø–æ–¥–≥–æ–Ω–∏ –ø–æ–¥ —Å–≤–æ—é –ª–æ–≥–∏–∫—É)
  const titles = [
    "üèéÔ∏è Fastest Selling Cars",
    "üí∞ Highest Profit Cars",
    "üìà Speed Comparison (Set A / Set B)",
    "‚≠ê Brand/Lineup Insights (A / B)"
  ];

  return (
    <div style={{ padding: "1rem 0" }}>
      {blocks.map((block, i) => {
        // –±—ã–≤–∞–µ—Ç, —á—Ç–æ ¬´–±–ª–æ–∫¬ª ‚Äî —ç—Ç–æ –º–∞—Å—Å–∏–≤ –∏–∑ –¥–≤—É—Ö —Å–ø–∏—Å–∫–æ–≤ –º–µ—Ç—Ä–∏–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, [A, B])
        const isNested = Array.isArray(block[0]);
        if (isNested) {
          const [partA, partB] = block;
          return (
            <div key={i}>
              <MetricSection title={`${titles[i] || `Section ${i+1}`} ‚Äî A`} data={partA} />
              <MetricSection title={`${titles[i] || `Section ${i+1}`} ‚Äî B`} data={partB} />
            </div>
          );
        }
        // –æ–±—ã—á–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–µ—Ç—Ä–∏–∫
        return <MetricSection key={i} title={titles[i] || `Section ${i+1}`} data={block} />;
      })}
    </div>
  );
}
